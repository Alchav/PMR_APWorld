{
    # Rules here define replacement "functions" or item aliases.
    # The alias itself must always be alphanumeric only--string items bypass the aliasing.
    # Rules should be simple python and can invoke other aliases or even the
    # at/here metarules.
    "Boots": "BootsProxy1 or BootsProxy2 or BootsProxy3",
    "Super_Boots": "(BootsProxy1 and BootsProxy2) or (BootsProxy1 and BootsProxy3) or (BootsProxy2 and BootsProxy3)",
    "Ultra_Boots": "BootsProxy1 and BootsProxy2 and BootsProxy3",
    "Hammer": "HammerProxy1 or HammerProxy2 or HammerProxy3",
    "Super_Hammer": "(HammerProxy1 and HammerProxy2) or (HammerProxy1 and HammerProxy3) or (HammerProxy2 and HammerProxy3)",
    "Ultra_Hammer": "HammerProxy1 and HammerProxy2 and HammerProxy3",

    "can_flip_panels": "Ultra_Hammer or Super_Boots",

    # This also applies to breaking yellow blocks, though the game never tells you that you can use Bombette
    "can_shake_trees": "Bombette or Hammer",

    "can_hit_grounded_blocks": "Bombette or Kooper or Super_Boots or Hammer",
    "can_hit_floating_blocks": "Kooper or Boots",
    "can_hit_grounded_switches": "Bombette or Kooper or Super_Boots or Hammer or Parakarry",

    # Steps are not literal stairs, but terrain too tall to walk up, requiring you to jump (or use Parakarry)
    # Jumping gains more height than Parakarry, so not all 'steps' can be climbed with Parakarry
    # Parakarry also cannot be used to go forward or back, only left or right
    # If logic requires boots, Parakarry is likely either unable to be used there or requires overly-precise positioning
    "can_climb_steps": "Bombette or Kooper or Boots or Hammer or Parakarry",
    "saved_all_yoshi_kids": "'RF_SavedYoshiKid1' and 'RF_SavedYoshiKid2' and 'RF_SavedYoshiKid3' and 'RF_SavedYoshiKid4' and 'RF_SavedYoshiKid5'",
    "can_reenter_vertical_pipes": "Kooper or Boots or Parakarry",

    # fix these later
    "can_see_hidden_blocks": "Watt or 'AF_CanSeeHiddenBlocks'",
    "can_reach_star_way": "('STARSPIRIT', 7)"

}